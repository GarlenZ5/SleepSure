var ValidatorSchema={
	UserEMailRegister:{
		properties:{
			'first_name':{required:true,type:'string',message:'WrongFirstNameFormat'},
			'account':{required:true,type:'string',pattern:'^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}$',maxLength:100,message:'WrongEmailFormat'},
			'password':{required:true,type:'string',minLength:6,maxLength:24,message:'WrongPasswordFormat'}
		}
	},
	UserEMailLogin:{
		properties:{
			'account':{required:true,type:'string',pattern:'^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}$',maxLength:100,message:'WrongEmailFormat'},
			'password':{required:true,type:'string',minLength:6,maxLength:24,message:'WrongPasswordFormat'}
		}
	},
	LoginWithThirdPartyLogin:{
		properties:{
			'first_name':{required:true,type:'string',message:'WrongFirstNameFormat'},
			'access_token':{required:true,type:'string',message:'WrongToken'},
			'type':{required:true,type:'string',message:'WrongLoginType'}
		}
	},
	UserLoginOut:{
		properties:{
			'token':{required:true,type:'string',message:'InvalidToken'}
		}
	},
	ResetPassword:{
		properties:{
			'token':{required:true,type:'string',message:'InvalidToken'},
			'oldpassword':{required:true,type:'string',minLength:6,maxLength:24,message:'WrongPasswordFormat'},
			'newpassword':{required:true,type:'string',minLength:6,maxLength:24,message:'WrongPasswordFormat'}
		}
	},
	UserSettingName:{
		properties:{
			'token':{required:true,type:'string',message:'InvalidToken'},
			'first_name':{required:true,type:'string',message:'WrongFirstNameFormat'}
		}
	},
	ForgetPassword:{
		properties:{
			'account':{required:true,type:'string',pattern:'^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}$',maxLength:100,message:'WrongEmailFormat'}
		}
	},
	ResendEmail:{
		properties:{
			'account':{required:true,type:'string',pattern:'^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}$',maxLength:100,message:'WrongEmailFormat'}
		}
	},
	ResetPassword:{
		properties:{
			'token':{required:true,type:'string',message:'InvalidToken'},
			'oldpassword':{required:true,type:'string',minLength:6,maxLength:24,message:'WrongPasswordFormat'},
			'newpassword':{required:true,type:'string',minLength:6,maxLength:24,message:'WrongPasswordFormat'}
		}
	},

	BabyAdd:{
		properties:{
			'name':{required:true,type:'string',message:'WrongBabyNameFormat'},
			'token':{required:true,type:'string',message:'WrongToken'},
			'gender':{required:true,message:'WrongBabyGender'},
			'birthday':{required:true,message:'WrongBabyBirthday'},
			'birth_weight':{required:true,message:'WrongBabyWeight'},
			'birth_length':{required:true,message:'WrongBabyLength'}
		}
	},

	BabyEdit:{
		properties:{
			'name':{required:true,type:'string',message:'WrongBabyNameFormat'},
			'babyid':{required:true,message:'InvalidInput'},
			'token':{required:true,type:'string',message:'WrongToken'},
			'gender':{required:true,message:'WrongBabyGender'},
			'birthday':{required:true,message:'WrongBabyBirthday'},
			'birth_weight':{required:true,message:'WrongBabyWeight'},
			'birth_length':{required:true,message:'WrongBabyLength'}
		}
	},
	BabyDel:{
		properties:{
			'babyid':{required:true,message:'InvalidInput'},
			'token':{required:true,type:'string',message:'WrongToken'}
		}
	},
	UploadIcon:{
		properties:{
			'babyid':{required:true,message:'InvalidInput'},
			'token':{required:true,type:'string',message:'WrongToken'}
		}
	},
	BabyNoticeSet:{
		properties:{
			'babyid':{required:true,message:'InvalidInput'},
			'token':{required:true,type:'string',message:'WrongToken'},
			'setting':{required:true,type:'object',message:'InvalidInput'}
		}
	},
	BabyStartNotify:{
		properties:{
			'babyid':{required:true,message:'InvalidInput'},
			'token':{required:true,type:'string',message:'WrongToken'},
			'start_notify':{required:true,message:'InvalidInput'}
		}
	},
	UpdateTracker:{
		properties:{
			'babyid':{required:true,message:'InvalidInput'},
			'token':{required:true,type:'string',message:'WrongToken'},
			'base_mac':{required:true,type:'string',message:'InvalidInput'}
		}
	},
	DisconnectTracker:{
		properties:{
			'token':{required:true,type:'string',message:'WrongToken'},
			'mac':{required:true,type:'string',message:'InvalidInput'}
		}
	},
	// DisconnectTracker:{
	// 	properties:{
	// 		'token':{required:true,type:'string',message:'WrongToken'},
	// 		'mac':{required:true,type:'string',message:'InvalidInput'}
	// 	}
	// },
}
module.exports=ValidatorSchema;